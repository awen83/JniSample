#define LOG_TAG "TestJni_jni"


#include <android/log.h>
#include <stdio.h>
#include <jni.h>
#include <android/bitmap.h>

#include "Jnilogger.h"


static uint8_t *buffer = NULL;
static int target_width = 320;
static int target_height = 240;
static struct SwsContext *img_convert_ctx = NULL;
static int videoStream = -1;
static uint8_t debug = 1;

/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ffmpeg_FFmpegJni_init
        (JNIEnv *env, jclass thiz) {
    return;
}

/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    getInt
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ffmpeg_FFmpegJni_getTargetWidth
        (JNIEnv *env, jclass thiz) {
    return target_width;
}

/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    getInt
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ffmpeg_FFmpegJni_getTargetHeight
        (JNIEnv *env, jclass thiz) {
    return target_height;
}


/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    getVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ffmpeg_FFmpegJni_getVersion
        (JNIEnv *env, jclass thiz) {
    char str[25];
    sprintf(str, "%u", 99);
    if (debug) LOGI(">>>>>>>>>>Java_com_ffmpeg_FFmpegJni_getVersion");
    return env->NewStringUTF(str);
}

/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    getTimeBase
 * Signature: ()I
 */
JNIEXPORT jfloat JNICALL Java_com_ffmpeg_FFmpegJni_getTimeBase
        (JNIEnv *env, jclass thiz) {
    return -1;
}


/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    openFile
 * Signature: (Ljava/lang/String;III)I
 */
JNIEXPORT jint JNICALL Java_com_ffmpeg_FFmpegJni_openFile
        (JNIEnv *env, jclass thiz, jstring path, jint screenWidth, jint screenHeight, jint fixWH) {
    int ret;
    int err;
    int i;
    if (debug) LOGI("open file end");
    return 0;
}

/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    drawFrame
 * Signature: (Landroid/graphics/Bitmap;)I
 */
JNIEXPORT jint JNICALL Java_com_ffmpeg_FFmpegJni_drawFrame
        (JNIEnv *env, jclass thiz, jobject bitmap) {
    AndroidBitmapInfo info;
    void *pixels = NULL;
    int ret;

    int err;
    int i;
    int frameFinished;
    if (debug) LOGI("drawFrame end");
    return ret;
}

int seek_frame(int tsms) {
    int64_t frame;
    int ret;
    if (debug) LOGI("seek return %i", ret);
    return 1;
}

/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    seek_frame
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_ffmpeg_FFmpegJni_seekTo
        (JNIEnv *env, jclass thiz, jint secs) {
    return seek_frame(secs * 1000);
}

/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    drawFrameAt
 * Signature: (Landroid/graphics/Bitmap;I)I
 */
JNIEXPORT jint JNICALL Java_com_ffmpeg_FFmpegJni_drawFrameAt
        (JNIEnv *env, jclass thiz, jobject bitmap, jint secs) {
    AndroidBitmapInfo info;
    void *pixels = NULL;
    int ret;
    int err;
    int i;
    int frameFinished = 0;
    if (debug) LOGI("drawFrameAt end");
    return ret;
}

/*
 * Class:     com_ffmpeg_FFmpegJni
 * Method:    exit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ffmpeg_FFmpegJni_exit
        (JNIEnv *env, jclass thiz) {
    if (debug) LOGI("jni exit");
}


